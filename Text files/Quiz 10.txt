What function will convert a normal bitmap in memory into a compressed RLE sprite?
A. convert_rle_sprite
B. get_rle_sprite
C. make_rle_sprite
D. create_rle_sprite
B. get_rle_sprite

What function will draw a compressed RLE sprite?
A. draw_sprite
B. copy_rle_sprite
C. draw_rle_sprite
D. rle_blit
C. draw_rle_sprite

What function converts a normal bitmap into a compiled sprite?
A. convert_compiled_sprite
B. make_compiled_sprite
C. create_compiled_sprite
D. get_compiled_sprite
D. get_compiled_sprite

What is the name of the function presented in this chapter for performing bounding-rectangle collision testing?
A. collided
B. collision
C. colliding
D. test_collision
A. collided

What is the name of the function in the sprite class presented in this chapter that draws a single frame of an animation sequence?
A. drawanimation
B. nextframe
C. drawframe
D. draw_sprite
C. drawframe

What is the name of the function that calculates angular velocity for X?
A. calculatevelocity
B. velocityx
C. calc_angle_x
D. calcAngleMoveX
C. calc_angle_x

What mathematical function is called on to calculate the angular velocity for Y?
A. sine
B. cosine
C. tangent
D. arcsine
A. sine

Which function converts a normal sprite into a run-length encoded sprite?
A. convert_sprite
B. get_rle_sprite
C. convert_to_rle
D. load_rle_sprite
B. get_rle_sprite

Which function draws a compiled sprite to a destination bitmap?
A. draw_compiled
B. draw_comp_sprite
C. draw_compiled_sprite
D. compiled_sprite
C. draw_compiled_sprite

What is the easiest (and most efficient) way to detect sprite collisions?
A. Bounding rectangle intersection
B. Pixel comparison
C. Bilinear quadratic evaluation
D. Union of two spheres
A. Bounding rectangle intersection